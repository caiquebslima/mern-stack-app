{"version":3,"sources":["features/auth/authService.js","features/auth/authSlice.js","features/goals/goalsService.js","features/goals/goalsSlice.js","app/store.js","components/Header.jsx","components/Spinner.jsx","components/GoalForm.jsx","components/GoalItem.jsx","pages/Dashboard.jsx","pages/Login.jsx","pages/Register.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_URL","register","userData","axios","post","response","data","localStorage","setItem","JSON","stringify","login","logout","removeItem","authService","user","parse","getItem","initialState","isError","isSuccess","isLoading","message","createAsyncThunk","thunkAPI","toString","rejectWithValue","authSlice","createSlice","name","reducers","reset","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","actions","config","headers","Authorization","token","getGoals","goals","get","createGoal","goal","deleteGoal","id","delete","goalsService","_","getState","auth","goalsSlice","push","filter","_id","store","configureStore","reducer","authReducer","goalsReducer","Header","navigate","useNavigate","dispatch","useDispatch","useSelector","className","to","onClick","Spinner","GoalForm","useState","text","setText","onSubmit","e","preventDefault","htmlFor","type","value","onChange","target","GoalItem","Date","createdAt","toLocaleString","Dashboard","useEffect","toast","error","console","log","length","map","Login","email","password","formData","setFormData","prevState","placeholder","Register","password2","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","container","document","getElementById","createRoot","render","StrictMode"],"mappings":"qOAEMA,EAAU,cAEVC,EAAQ,iDAAG,WAAMC,GAAN,iGACUC,IAAMC,KAAKJ,EAASE,GAD9B,cACPG,EADO,QAGAC,MACTC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAASC,OAJ5C,kBAOND,EAASC,MAPH,2CAAH,sDASRK,EAAK,iDAAG,WAAMT,GAAN,iGACaC,IAAMC,KAAKJ,EAAU,QAASE,GAD3C,cACJG,EADI,QAGGC,MACTC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUL,EAASC,OAJ/C,kBAOHD,EAASC,MAPN,2CAAH,sDAULM,EAAM,iDAAG,wFACXL,aAAaM,WAAW,QADb,2CAAH,qDAUGC,EANK,CAChBb,WACAW,SACAD,SC3BEI,EAAON,KAAKO,MAAMT,aAAaU,QAAQ,SAEvCC,EAAe,CACjBH,KAAMA,GAAc,KACpBI,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,QAAS,IAGArB,EAAWsB,YACpB,gBADoC,iDAEpC,WAAOR,EAAMS,GAAb,0GAEqBV,EAAYb,SAASc,GAF1C,+EAIcO,EACD,KAAMjB,UACH,KAAMA,SAASC,MACf,KAAMD,SAASC,KAAKgB,SACxB,KAAMA,SACN,KAAMG,WATlB,kBAUeD,EAASE,gBAAgBJ,IAVxC,yDAFoC,yDAiB3BX,EAAQY,YAAiB,aAAD,iDAAe,WAAOR,EAAMS,GAAb,0GAE/BV,EAAYH,MAAMI,GAFa,+EAItCO,EACD,KAAMjB,UACH,KAAMA,SAASC,MACf,KAAMD,SAASC,KAAKgB,SACxB,KAAMA,SACN,KAAMG,WATkC,kBAUrCD,EAASE,gBAAgBJ,IAVY,yDAAf,yDAcxBV,EAASW,YAAiB,cAAD,gCAAgB,wGAC5CT,EAAYF,SADgC,4CAIzCe,EAAYC,YAAY,CACjCC,KAAM,OACNX,eACAY,SAAU,CACNC,MAAO,SAACC,GACJA,EAAMX,WAAY,EAClBW,EAAMb,SAAU,EAChBa,EAAMZ,WAAY,EAClBY,EAAMV,QAAU,KAGxBW,cAAe,SAACC,GACZA,EACKC,QAAQlC,EAASmC,SAAS,SAACJ,GACxBA,EAAMX,WAAY,KAErBc,QAAQlC,EAASoC,WAAW,SAACL,EAAOM,GACjCN,EAAMX,WAAY,EAClBW,EAAMZ,WAAY,EAClBY,EAAMjB,KAAOuB,EAAOC,WAEvBJ,QAAQlC,EAASuC,UAAU,SAACR,EAAOM,GAChCN,EAAMX,WAAY,EAClBW,EAAMb,SAAU,EAChBa,EAAMV,QAAUU,EAAMO,QACtBP,EAAMjB,KAAO,QAEhBoB,QAAQxB,EAAMyB,SAAS,SAACJ,GACrBA,EAAMX,WAAY,KAErBc,QAAQxB,EAAM0B,WAAW,SAACL,EAAOM,GAC9BN,EAAMX,WAAY,EAClBW,EAAMZ,WAAY,EAClBY,EAAMjB,KAAOuB,EAAOC,WAEvBJ,QAAQxB,EAAM6B,UAAU,SAACR,EAAOM,GAC7BN,EAAMX,WAAY,EAClBW,EAAMb,SAAU,EAChBa,EAAMV,QAAUU,EAAMO,QACtBP,EAAMjB,KAAO,QAEhBoB,QAAQvB,EAAOyB,WAAW,SAACL,GACxBA,EAAMjB,KAAO,WAKdgB,EAAUJ,EAAUc,QAApBV,MACAJ,IAAf,QC9FM3B,EAAU,cAEVe,EAAON,KAAKO,MAAMT,aAAaU,QAAQ,SACvCyB,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAY7B,EAAK8B,SAGvCC,EAAQ,iDAAG,WAAMC,GAAN,iGACU5C,IAAM6C,IAAIhD,EAAS0C,GAD7B,cACPrC,EADO,yBAGNA,EAASC,MAHH,2CAAH,sDAMR2C,EAAU,iDAAG,WAAOC,EAAML,GAAb,0FACTH,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYC,KAFzB,SAIQ1C,IAAMC,KAAKJ,EAASkD,EAAMR,GAJlC,cAITrC,EAJS,yBAMRA,EAASC,MAND,2CAAH,wDAQV6C,EAAU,iDAAG,WAAOC,EAAIP,GAAX,0FACTH,EAAS,CACXC,QAAS,CAAEC,cAAc,UAAD,OAAYC,KAFzB,SAIQ1C,IAAMkD,OAAOrD,EAAUoD,EAAIV,GAJnC,cAITrC,EAJS,yBAMRA,EAASC,MAND,2CAAH,wDAeDgD,EANM,CACjBR,WACAG,aACAE,cChCEjC,EAAe,CACjB6B,MAAO,GACP5B,SAAS,EACTC,WAAW,EACXC,WAAW,EACXC,QAAS,IAGAwB,EAAWvB,YACpB,eADoC,iDAEpC,WAAOgC,EAAG/B,GAAV,0GAEqB8B,EAAaR,WAFlC,+EAIcxB,EACD,KAAMjB,UACH,KAAMA,SAASC,MACf,KAAMD,SAASC,KAAKgB,SACxB,KAAMA,SACN,KAAMG,WATlB,kBAUeD,EAASE,gBAAgBJ,IAVxC,yDAFoC,yDAgB3B2B,EAAa1B,YACtB,eADsC,iDAEtC,WAAO2B,EAAM1B,GAAb,mGAEcqB,EAAQrB,EAASgC,WAAWC,KAAK1C,KAAK8B,MAFpD,SAGqBS,EAAaL,WAAWC,EAAML,GAHnD,+EAKcvB,EACD,KAAMjB,UACH,KAAMA,SAASC,MACf,KAAMD,SAASC,KAAKgB,SACxB,KAAMA,SACN,KAAMG,WAVlB,kBAWeD,EAASE,gBAAgBJ,IAXxC,yDAFsC,yDAkB7B6B,EAAa5B,YACtB,eADsC,iDAEtC,WAAO6B,EAAI5B,GAAX,mGAEcqB,EAAQrB,EAASgC,WAAWC,KAAK1C,KAAK8B,MAFpD,SAGqBS,EAAaH,WAAWC,EAAIP,GAHjD,+EAKcvB,EACD,KAAMjB,UACH,KAAMA,SAASC,MACf,KAAMD,SAASC,KAAKgB,SACxB,KAAMA,SACN,KAAMG,WAVlB,kBAWeD,EAASE,gBAAgBJ,IAXxC,yDAFsC,yDAkB7BoC,EAAa9B,YAAY,CAClCC,KAAM,QACNX,eACAY,SAAU,CACNC,MAAO,SAAAC,GAAK,OAAId,IAEpBe,cAAe,SAAAC,GACXA,EACKC,QAAQc,EAAWb,SAAS,SAAAJ,GACzBA,EAAMX,WAAY,KAErBc,QAAQc,EAAWZ,WAAW,SAACL,EAAOM,GACnCN,EAAMX,WAAY,EAClBW,EAAMZ,WAAY,EAClBY,EAAMe,MAAMY,KAAKrB,EAAOC,YAE3BJ,QAAQc,EAAWT,UAAU,SAACR,EAAOM,GAClCN,EAAMX,WAAY,EAClBW,EAAMb,SAAU,EAChBa,EAAMV,QAAUgB,EAAOC,WAE1BJ,QAAQW,EAASV,SAAS,SAAAJ,GACvBA,EAAMX,WAAY,KAErBc,QAAQW,EAAST,WAAW,SAACL,EAAOM,GACjCN,EAAMX,WAAY,EAClBW,EAAMZ,WAAY,EAClBY,EAAMe,MAAQT,EAAOC,WAExBJ,QAAQW,EAASN,UAAU,SAACR,EAAOM,GAChCN,EAAMX,WAAY,EAClBW,EAAMb,SAAU,EAChBa,EAAMV,QAAUgB,EAAOC,QACvBP,EAAMe,MAAQ,MAEjBZ,QAAQgB,EAAWf,SAAS,SAAAJ,GACzBA,EAAMX,WAAY,KAErBc,QAAQgB,EAAWd,WAAW,SAACL,EAAOM,GACnCN,EAAMX,WAAY,EAClBW,EAAMZ,WAAY,EAClBY,EAAMe,MAAQf,EAAMe,MAAMa,QACtB,SAAAV,GAAI,OAAIA,EAAKW,MAAQvB,EAAOC,QAAQsB,UAG3C1B,QAAQgB,EAAWX,UAAU,SAACR,EAAOM,GAClCN,EAAMX,WAAY,EAClBW,EAAMb,SAAU,EAChBa,EAAMV,QAAUgB,EAAOC,QACvBP,EAAMe,MAAQ,SAKfhB,EAAU2B,EAAWjB,QAArBV,MACA2B,IAAf,QClHaI,EAAQC,YAAe,CAChCC,QAAS,CACLP,KAAMQ,EACNlB,MAAOmB,K,8BCwCAC,EA1CA,WACX,IAAMC,EAAWC,cACXC,EAAWC,cACTxD,EAASyD,aAAY,SAACxC,GAAD,OAAWA,EAAMyB,QAAtC1C,KAQR,OACI,yBAAQ0D,UAAU,SAAlB,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAMC,GAAG,IAAT,0BAEH3D,EACG,6BACI,6BACI,yBAAQ0D,UAAU,MAAME,QAd3B,WACbL,EAAS1D,KACT0D,EAASvC,KACTqC,EAAS,WAWO,UACI,cAAC,IAAD,IADJ,iBAMR,+BACI,6BACI,eAAC,IAAD,CAAMM,GAAG,SAAT,UACI,cAAC,IAAD,IADJ,cAIJ,6BACI,eAAC,IAAD,CAAMA,GAAG,YAAT,UACI,cAAC,IAAD,IADJ,wB,QC7BTE,EARC,WACZ,OACI,qBAAKH,UAAU,0BAAf,SACI,qBAAKA,UAAU,sB,OCkCZI,EAjCE,WACb,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMV,EAAWC,cAQjB,OACI,yBAASE,UAAU,OAAnB,SACI,uBAAMQ,SATG,SAAAC,GACbA,EAAEC,iBAEFb,EAASrB,EAAW,CAAE8B,UACtBC,EAAQ,KAKJ,UACI,sBAAKP,UAAU,aAAf,UACI,uBAAOW,QAAQ,OAAf,kBACA,uBACIC,KAAK,OACLxD,KAAK,OACLuB,GAAG,OACHkC,MAAOP,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAAQE,EAAEM,OAAOF,aAGxC,qBAAKb,UAAU,aAAf,SACI,wBAAQA,UAAU,gBAAgBY,KAAK,SAAvC,8BCTLI,EAhBE,SAAC,GAAc,IAAZvC,EAAW,EAAXA,KACVoB,EAAWC,cACjB,OACI,sBAAKE,UAAU,OAAf,UACI,8BAAM,IAAIiB,KAAKxC,EAAKyC,WAAWC,eAAe,WAC9C,6BAAK1C,EAAK6B,OACV,wBACIJ,QAAS,kBAAML,EAASnB,EAAWD,EAAKW,OACxCY,UAAU,QAFd,mBCsDGoB,EAtDG,WACd,IAAMzB,EAAWC,cACXC,EAAWC,cAETxD,EAASyD,aAAY,SAAAxC,GAAK,OAAIA,EAAMyB,QAApC1C,KAER,EAA+CyD,aAC3C,SAAAxC,GAAK,OAAIA,EAAMe,SADXA,EAAR,EAAQA,MAAO1B,EAAf,EAAeA,UAAWF,EAA1B,EAA0BA,QAASG,EAAnC,EAAmCA,QAsBnC,OAnBAwE,qBAAU,WACF3E,GAAWG,GACXyE,QAAMC,MAAM1E,KAEjB,CAACyB,EAAO5B,EAASG,EAAS8C,EAAUE,IAEvCwB,qBAAU,WAQN,OAPI3E,GAAWG,GACX2E,QAAQC,IAAI5E,GAEXP,GACDqD,EAAS,UAEbE,EAASxB,KACF,WACHwB,EAASvC,QAEd,CAAChB,EAAMqD,EAAUjD,EAASG,EAASgD,IAElCjD,EACO,cAAC,EAAD,IAIP,mCACI,0BAASoD,UAAU,UAAnB,UACI,2CAAc1D,GAAQA,EAAKc,QAC3B,gDACA,cAAC,EAAD,IACA,yBAAS4C,UAAU,UAAnB,SACK1B,EAAMoD,OAAS,EACZ,qBAAK1B,UAAU,QAAf,SACK1B,EAAMqD,KAAI,SAAAlD,GAAI,OACX,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKW,UAIxC,oE,gBC6CTwC,EA5FD,WACV,MAAgCvB,mBAAS,CACrCwB,MAAO,GACPC,SAAU,KAFd,mBAAOC,EAAP,KAAiBC,EAAjB,KAKQH,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAETnC,EAAWC,cACXC,EAAWC,cAEjB,EAAyDC,aACrD,SAAAxC,GAAK,OAAIA,EAAMyB,QADX1C,EAAR,EAAQA,KAAMM,EAAd,EAAcA,UAAWF,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,UAAWE,EAA7C,EAA6CA,QAI7CwE,qBAAU,WACF3E,GAAWG,GACXyE,QAAMC,MAAM1E,IAGZF,GAAaL,IACbqD,EAAS,KAGbE,EAASvC,OACV,CAAChB,EAAMI,EAASC,EAAWE,EAAS8C,EAAUE,IAEjD,IAAMiB,EAAW,SAAAL,GACbuB,GAAY,SAAAC,GAAS,kCACdA,GADc,kBAEhBxB,EAAEM,OAAO3D,KAAOqD,EAAEM,OAAOF,YAclC,OAAIjE,EACO,cAAC,EAAD,IAIP,qCACI,0BAASoD,UAAU,UAAnB,UACI,+BACI,cAAC,IAAD,IAAgB,OAEpB,yCAEJ,yBAASA,UAAU,OAAnB,SACI,uBAAMQ,SAxBD,SAAAC,GACbA,EAAEC,iBAOFb,EAAS3D,EALQ,CACb2F,QACAC,eAmBI,UACI,qBAAK9B,UAAU,aAAf,SACI,uBACIA,UAAU,eACVY,KAAK,OACLxD,KAAK,QACLuB,GAAG,QACHkC,MAAOgB,EACPK,YAAY,mBACZpB,SAAUA,MAGlB,qBAAKd,UAAU,aAAf,SACI,uBACIA,UAAU,eACVY,KAAK,WACLxD,KAAK,WACLuB,GAAG,WACHkC,MAAOiB,EACPI,YAAY,iBACZpB,SAAUA,MAIlB,qBAAKd,UAAU,aAAf,SACI,wBAAQY,KAAK,SAASZ,UAAU,gBAAhC,8BCoCTmC,GAtHE,WACb,MAAgC9B,mBAAS,CACrCjD,KAAM,GACNyE,MAAO,GACPC,SAAU,GACVM,UAAW,KAJf,mBAAOL,EAAP,KAAiBC,EAAjB,KAOQ5E,EAAqC2E,EAArC3E,KAAMyE,EAA+BE,EAA/BF,MAAOC,EAAwBC,EAAxBD,SAAUM,EAAcL,EAAdK,UAEzBzC,EAAWC,cACXC,EAAWC,cAEjB,EAAyDC,aACrD,SAACxC,GAAD,OAAWA,EAAMyB,QADb1C,EAAR,EAAQA,KAAMM,EAAd,EAAcA,UAAWF,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,UAAWE,EAA7C,EAA6CA,QAI7CwE,qBAAU,WACF3E,GACA4E,QAAMC,MAAM1E,IAGZF,GAAaL,IACbqD,EAAS,KAGbE,EAASvC,OACV,CAAChB,EAAMI,EAASC,EAAWE,EAAS8C,EAAUE,IAEjD,IAAMiB,EAAW,SAACL,GACduB,GAAY,SAACC,GAAD,mBAAC,eACNA,GADK,kBAEPxB,EAAEM,OAAO3D,KAAOqD,EAAEM,OAAOF,YAiBlC,OAAIjE,EACO,cAAC,EAAD,IAIP,qCACI,0BAASoD,UAAU,UAAnB,UACI,+BACI,cAAC,IAAD,IAAW,OAEf,qDAEJ,yBAASA,UAAU,OAAnB,SACI,uBAAMQ,SA3BD,SAACC,IACdA,EAAEC,iBACEoB,IAAaM,GACbd,QAAMC,MAAM,0BAOZ1B,EAASrE,EALQ,CACb4B,OACAyE,QACAC,eAmBA,UACI,qBAAK9B,UAAU,aAAf,SACI,uBACIA,UAAU,eACVY,KAAK,OACLxD,KAAK,OACLuB,GAAG,OACHkC,MAAOzD,EACP8E,YAAY,kBACZpB,SAAUA,MAGlB,qBAAKd,UAAU,aAAf,SACI,uBACIA,UAAU,eACVY,KAAK,OACLxD,KAAK,QACLuB,GAAG,QACHkC,MAAOgB,EACPK,YAAY,mBACZpB,SAAUA,MAGlB,qBAAKd,UAAU,aAAf,SACI,uBACIA,UAAU,eACVY,KAAK,WACLxD,KAAK,WACLuB,GAAG,WACHkC,MAAOiB,EACPI,YAAY,iBACZpB,SAAUA,MAGlB,qBAAKd,UAAU,aAAf,SACI,uBACIA,UAAU,eACVY,KAAK,WACLxD,KAAK,YACLuB,GAAG,YACHkC,MAAOuB,EACPF,YAAY,mBACZpB,SAAUA,MAGlB,qBAAKd,UAAU,aAAf,SACI,wBAAQY,KAAK,SAASZ,UAAU,gBAAhC,+B,MC1FTqC,OAlBf,WACI,OACI,qCACI,cAAC,IAAD,UACI,sBAAKrC,UAAU,YAAf,UACI,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOsC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,cAI7C,cAAC,iBAAD,QCTGC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCCRQ,I,MAAYC,SAASC,eAAe,SAC7BC,qBAAWH,IAEnBI,OACD,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUjE,MAAOA,EAAjB,SACI,cAAC,GAAD,SAQZmD,O","file":"static/js/main.19bb9f0f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API_URL = '/api/users/'\n\nconst register = async userData => {\n    const response = await axios.post(API_URL, userData)\n\n    if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data))\n    }\n\n    return response.data\n}\nconst login = async userData => {\n    const response = await axios.post(API_URL + 'login', userData)\n\n    if (response.data) {\n        localStorage.setItem('user', JSON.stringify(response.data))\n    }\n\n    return response.data\n}\n\nconst logout = async () => {\n    localStorage.removeItem('user')\n}\n\nconst authService = {\n    register,\n    logout,\n    login,\n}\n\nexport default authService\n","import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport authService from \"./authService\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = {\n    user: user ? user : null,\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: \"\",\n};\n\nexport const register = createAsyncThunk(\n    \"auth/register\",\n    async (user, thunkAPI) => {\n        try {\n            return await authService.register(user);\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString();\n            return thunkAPI.rejectWithValue(message);\n        }\n    }\n);\n\nexport const login = createAsyncThunk(\"auth/login\", async (user, thunkAPI) => {\n    try {\n        return await authService.login(user);\n    } catch (error) {\n        const message =\n            (error.response &&\n                error.response.data &&\n                error.response.data.message) ||\n            error.message ||\n            error.toString();\n        return thunkAPI.rejectWithValue(message);\n    }\n});\n\nexport const logout = createAsyncThunk(\"auth/logout\", async () => {\n    await authService.logout();\n});\n\nexport const authSlice = createSlice({\n    name: \"auth\",\n    initialState,\n    reducers: {\n        reset: (state) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = false;\n            state.message = \"\";\n        },\n    },\n    extraReducers: (builder) => {\n        builder\n            .addCase(register.pending, (state) => {\n                state.isLoading = true;\n            })\n            .addCase(register.fulfilled, (state, action) => {\n                state.isLoading = false;\n                state.isSuccess = true;\n                state.user = action.payload;\n            })\n            .addCase(register.rejected, (state, action) => {\n                state.isLoading = false;\n                state.isError = true;\n                state.message = state.payload;\n                state.user = null;\n            })\n            .addCase(login.pending, (state) => {\n                state.isLoading = true;\n            })\n            .addCase(login.fulfilled, (state, action) => {\n                state.isLoading = false;\n                state.isSuccess = true;\n                state.user = action.payload;\n            })\n            .addCase(login.rejected, (state, action) => {\n                state.isLoading = false;\n                state.isError = true;\n                state.message = state.payload;\n                state.user = null;\n            })\n            .addCase(logout.fulfilled, (state) => {\n                state.user = null;\n            });\n    },\n});\n\nexport const { reset } = authSlice.actions;\nexport default authSlice.reducer;\n","import axios from 'axios'\n\nconst API_URL = '/api/goals/'\n\nconst user = JSON.parse(localStorage.getItem('user'))\nconst config = {\n    headers: { Authorization: `Bearer ${user.token}` },\n}\n\nconst getGoals = async goals => {\n    const response = await axios.get(API_URL, config)\n\n    return response.data\n}\n\nconst createGoal = async (goal, token) => {\n    const config = {\n        headers: { Authorization: `Bearer ${token}` },\n    }\n    const response = await axios.post(API_URL, goal, config)\n\n    return response.data\n}\nconst deleteGoal = async (id, token) => {\n    const config = {\n        headers: { Authorization: `Bearer ${token}` },\n    }\n    const response = await axios.delete(API_URL + id, config)\n\n    return response.data\n}\n\nconst goalsService = {\n    getGoals,\n    createGoal,\n    deleteGoal,\n}\n\nexport default goalsService\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport goalsService from './goalsService'\n\nconst initialState = {\n    goals: [],\n    isError: false,\n    isSuccess: false,\n    isLoading: false,\n    message: '',\n}\n\nexport const getGoals = createAsyncThunk(\n    'goals/getAll',\n    async (_, thunkAPI) => {\n        try {\n            return await goalsService.getGoals()\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    },\n)\nexport const createGoal = createAsyncThunk(\n    'goals/create',\n    async (goal, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().auth.user.token\n            return await goalsService.createGoal(goal, token)\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    },\n)\n\nexport const deleteGoal = createAsyncThunk(\n    'goals/delete',\n    async (id, thunkAPI) => {\n        try {\n            const token = thunkAPI.getState().auth.user.token\n            return await goalsService.deleteGoal(id, token)\n        } catch (error) {\n            const message =\n                (error.response &&\n                    error.response.data &&\n                    error.response.data.message) ||\n                error.message ||\n                error.toString()\n            return thunkAPI.rejectWithValue(message)\n        }\n    },\n)\n\nexport const goalsSlice = createSlice({\n    name: 'goals',\n    initialState,\n    reducers: {\n        reset: state => initialState,\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(createGoal.pending, state => {\n                state.isLoading = true\n            })\n            .addCase(createGoal.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.goals.push(action.payload)\n            })\n            .addCase(createGoal.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n            })\n            .addCase(getGoals.pending, state => {\n                state.isLoading = true\n            })\n            .addCase(getGoals.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.goals = action.payload\n            })\n            .addCase(getGoals.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n                state.goals = []\n            })\n            .addCase(deleteGoal.pending, state => {\n                state.isLoading = true\n            })\n            .addCase(deleteGoal.fulfilled, (state, action) => {\n                state.isLoading = false\n                state.isSuccess = true\n                state.goals = state.goals.filter(\n                    goal => goal._id !== action.payload._id,\n                )\n            })\n            .addCase(deleteGoal.rejected, (state, action) => {\n                state.isLoading = false\n                state.isError = true\n                state.message = action.payload\n                state.goals = []\n            })\n    },\n})\n\nexport const { reset } = goalsSlice.actions\nexport default goalsSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport authReducer from '../features/auth/authSlice'\nimport goalsReducer from '../features/goals/goalsSlice'\n\nexport const store = configureStore({\n    reducer: {\n        auth: authReducer,\n        goals: goalsReducer,\n    },\n})\n","import { FaSignInAlt, FaSignOutAlt, FaUser } from \"react-icons/fa\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { logout, reset } from \"../features/auth/authSlice\";\n\nconst Header = () => {\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n    const { user } = useSelector((state) => state.auth);\n\n    const onLogout = () => {\n        dispatch(logout());\n        dispatch(reset());\n        navigate(\"/login\");\n    };\n\n    return (\n        <header className=\"header\">\n            <div className=\"logo\">\n                <Link to=\"/\">GoalSetter</Link>\n            </div>\n            {user ? (\n                <ul>\n                    <li>\n                        <button className=\"btn\" onClick={onLogout}>\n                            <FaSignOutAlt /> Logout\n                        </button>\n                    </li>\n                </ul>\n            ) : (\n                <ul>\n                    <li>\n                        <Link to=\"/login\">\n                            <FaSignInAlt /> Login\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to=\"/register\">\n                            <FaUser /> Register\n                        </Link>\n                    </li>\n                </ul>\n            )}\n        </header>\n    );\n};\n\nexport default Header;\n","const Spinner = () => {\n    return (\n        <div className=\"loadingSpinnerContainer\">\n            <div className=\"loadingSpinner\"></div>\n        </div>\n    );\n};\n\nexport default Spinner;\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { createGoal } from '../features/goals/goalsSlice'\n\nconst GoalForm = () => {\n    const [text, setText] = useState('')\n    const dispatch = useDispatch()\n    const onSubmit = e => {\n        e.preventDefault()\n\n        dispatch(createGoal({ text }))\n        setText('')\n    }\n\n    return (\n        <section className=\"form\">\n            <form onSubmit={onSubmit}>\n                <div className=\"form-group\">\n                    <label htmlFor=\"text\">Goal</label>\n                    <input\n                        type=\"text\"\n                        name=\"goal\"\n                        id=\"goal\"\n                        value={text}\n                        onChange={e => setText(e.target.value)}\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <button className=\"btn btn-block\" type=\"submit\">\n                        Add goal\n                    </button>\n                </div>\n            </form>\n        </section>\n    )\n}\n\nexport default GoalForm\n","import { useDispatch } from 'react-redux'\nimport { deleteGoal } from '../features/goals/goalsSlice'\n\nconst GoalItem = ({ goal }) => {\n    const dispatch = useDispatch()\n    return (\n        <div className=\"goal\">\n            <div>{new Date(goal.createdAt).toLocaleString('pt-br')}</div>\n            <h2>{goal.text}</h2>\n            <button\n                onClick={() => dispatch(deleteGoal(goal._id))}\n                className=\"close\"\n            >\n                X\n            </button>\n        </div>\n    )\n}\n\nexport default GoalItem\n","import { useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getGoals, reset } from '../features/goals/goalsSlice'\nimport { toast } from 'react-toastify'\nimport Spinner from '../components/Spinner'\nimport GoalForm from '../components/GoalForm'\nimport GoalItem from '../components/GoalItem'\n\nconst Dashboard = () => {\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const { user } = useSelector(state => state.auth)\n\n    const { goals, isLoading, isError, message } = useSelector(\n        state => state.goals,\n    )\n    useEffect(() => {\n        if (isError && message) {\n            toast.error(message)\n        }\n    }, [goals, isError, message, navigate, dispatch])\n\n    useEffect(() => {\n        if (isError && message) {\n            console.log(message)\n        }\n        if (!user) {\n            navigate('/login')\n        }\n        dispatch(getGoals())\n        return () => {\n            dispatch(reset())\n        }\n    }, [user, navigate, isError, message, dispatch])\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    return (\n        <>\n            <section className=\"heading\">\n                <h1>Welcome, {user && user.name}</h1>\n                <p>Goals Dashboard</p>\n                <GoalForm />\n                <section className=\"content\">\n                    {goals.length > 0 ? (\n                        <div className=\"goals\">\n                            {goals.map(goal => (\n                                <GoalItem goal={goal} key={goal._id} />\n                            ))}\n                        </div>\n                    ) : (\n                        <h3>You have not set any goals</h3>\n                    )}\n                </section>\n            </section>\n        </>\n    )\n}\n\nexport default Dashboard\n","import { useState, useEffect } from 'react'\nimport { FaSignInAlt } from 'react-icons/fa'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport { login, reset } from '../features/auth/authSlice'\nimport Spinner from '../components/Spinner'\n\nconst Login = () => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: '',\n    })\n\n    const { email, password } = formData\n\n    const navigate = useNavigate()\n    const dispatch = useDispatch()\n\n    const { user, isLoading, isError, isSuccess, message } = useSelector(\n        state => state.auth,\n    )\n\n    useEffect(() => {\n        if (isError && message) {\n            toast.error(message)\n        }\n\n        if (isSuccess || user) {\n            navigate('/')\n        }\n\n        dispatch(reset())\n    }, [user, isError, isSuccess, message, navigate, dispatch])\n\n    const onChange = e => {\n        setFormData(prevState => ({\n            ...prevState,\n            [e.target.name]: e.target.value,\n        }))\n    }\n    const onSubmit = e => {\n        e.preventDefault()\n\n        const userData = {\n            email,\n            password,\n        }\n\n        dispatch(login(userData))\n    }\n\n    if (isLoading) {\n        return <Spinner />\n    }\n\n    return (\n        <>\n            <section className=\"heading\">\n                <h1>\n                    <FaSignInAlt />{' '}\n                </h1>\n                <p>Login</p>\n            </section>\n            <section className=\"form\">\n                <form onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            name=\"email\"\n                            id=\"email\"\n                            value={email}\n                            placeholder=\"Enter your email\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            value={password}\n                            placeholder=\"Enter password\"\n                            onChange={onChange}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-block\">\n                            Login\n                        </button>\n                    </div>\n                </form>\n            </section>\n        </>\n    )\n}\n\nexport default Login\n","import { useState, useEffect } from \"react\";\nimport { FaUser } from \"react-icons/fa\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { register, reset } from \"../features/auth/authSlice\";\nimport Spinner from \"../components/Spinner\";\n\nconst Register = () => {\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        password2: \"\",\n    });\n\n    const { name, email, password, password2 } = formData;\n\n    const navigate = useNavigate();\n    const dispatch = useDispatch();\n\n    const { user, isLoading, isError, isSuccess, message } = useSelector(\n        (state) => state.auth\n    );\n\n    useEffect(() => {\n        if (isError) {\n            toast.error(message);\n        }\n\n        if (isSuccess || user) {\n            navigate(\"/\");\n        }\n\n        dispatch(reset());\n    }, [user, isError, isSuccess, message, navigate, dispatch]);\n\n    const onChange = (e) => {\n        setFormData((prevState) => ({\n            ...prevState,\n            [e.target.name]: e.target.value,\n        }));\n    };\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (password !== password2) {\n            toast.error(\"Passwords do not match\");\n        } else {\n            const userData = {\n                name,\n                email,\n                password,\n            };\n            dispatch(register(userData));\n        }\n    };\n\n    if (isLoading) {\n        return <Spinner />;\n    }\n\n    return (\n        <>\n            <section className=\"heading\">\n                <h1>\n                    <FaUser />{\" \"}\n                </h1>\n                <p>Create an Account</p>\n            </section>\n            <section className=\"form\">\n                <form onSubmit={onSubmit}>\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            name=\"name\"\n                            id=\"name\"\n                            value={name}\n                            placeholder=\"Enter your name\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\"\n                            type=\"text\"\n                            name=\"email\"\n                            id=\"email\"\n                            value={email}\n                            placeholder=\"Enter your email\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            name=\"password\"\n                            id=\"password\"\n                            value={password}\n                            placeholder=\"Enter password\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <input\n                            className=\"form-control\"\n                            type=\"password\"\n                            name=\"password2\"\n                            id=\"password2\"\n                            value={password2}\n                            placeholder=\"Confirm password\"\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button type=\"submit\" className=\"btn btn-block\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </section>\n        </>\n    );\n};\n\nexport default Register;\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n    return (\n        <>\n            <Router>\n                <div className=\"container\">\n                    <Header />\n                    <Routes>\n                        <Route path=\"/\" element={<Dashboard />} />\n                        <Route path=\"/login\" element={<Login />} />\n                        <Route path=\"/register\" element={<Register />} />\n                    </Routes>\n                </div>\n            </Router>\n            <ToastContainer />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nconst container = document.getElementById(\"root\");\nconst root = createRoot(container);\n\nroot.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}